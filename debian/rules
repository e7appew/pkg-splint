#!/usr/bin/make -f

include /usr/share/dpatch/dpatch.make

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

PKG_NAME=splint
PKG_VERS=3.1.2
UPSTR_SITE=http://www.$(PKG_NAME).org
UPSTR_DIR=$(PKG_NAME)-$(PKG_VERS)
UPSTR_FILE=$(UPSTR_DIR).src.tgz
DFSG_ORIG_DIR=$(UPSTR_DIR).dfsg
DFSG_ORIG_TAR=$(PKG_NAME)_$(PKG_VERS).dfsg.orig.tar

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS=-Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

config.status: patch configure-stamp
configure-stamp:
	dh_testdir
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config/config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config/config.guess
endif
	./configure --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info CFLAGS="$(CFLAGS)" LDFLAGS="-Wl,-z,defs"
	touch $@

build: build-stamp

build-stamp: patch-stamp config.status
	dh_testdir
	$(MAKE)
	touch $@

clean: clean-patched unpatch
clean-patched:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	[ ! -f Makefile ] || $(MAKE) distclean
	rm -f config/config.sub config/config.guess
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs
	$(MAKE) DESTDIR=$(CURDIR)/debian/splint-data install-data
	$(MAKE) DESTDIR=$(CURDIR)/debian/splint install-exec
	install -D -m 0644 $(CURDIR)/debian/lintian $(CURDIR)/debian/splint/usr/share/lintian/overrides/splint
	install -D -m 0644 $(CURDIR)/debian/linda $(CURDIR)/debian/splint/usr/share/linda/overrides/splint

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs -i
	dh_installdocs -i -p splint-doc-html
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_installchangelogs -a doc/changes.html
	dh_installdocs -a -p splint
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

get-orig-source:
	wget -q $(UPSTR_SITE)/downloads/$(UPSTR_FILE)
	tar -zxf $(UPSTR_FILE)
	mv $(UPSTR_DIR) $(DFSG_ORIG_DIR)
	rm -f $(DFSG_ORIG_DIR)/doc/manual.pdf
	wget -q $(UPSTR_SITE)/faq.html -O $(DFSG_ORIG_DIR)/doc/html/faq.html
	wget -q $(UPSTR_SITE)/changes.html -O $(DFSG_ORIG_DIR)/doc/changes.html
	wget -q $(UPSTR_SITE)/bugs.html -O $(DFSG_ORIG_DIR)/doc/bugs.html
	tar -cf $(DFSG_ORIG_TAR) $(DFSG_ORIG_DIR)
	gzip --best $(DFSG_ORIG_TAR)
	rm -rf $(DFSG_ORIG_DIR) $(UPSTR_FILE)
	@echo "Re-packaged source file: $(DFSG_ORIG_TAR).gz"
	@ls -l $(DFSG_ORIG_TAR).gz

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install patch unpatch get-orig-source
