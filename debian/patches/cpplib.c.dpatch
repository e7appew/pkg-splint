#! /bin/sh -e
## exprNode.c.dpatch by samu <samu@debian.org>
##
## All lines beginning with \`## DP:' are a description of the patch.
## DP: patch to make it sure that chars are signed


if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1;;
esac

exit 0

--- splint-3.1.1/src/cpplib.c	2003-04-21 00:55:04.000000000 +0200
+++ splint/src/cpplib.c	2006-03-29 14:13:18.000000000 +0200
@@ -2183,6 +2183,13 @@
 /*@notfunction@*/
 #define REST_EXTENSION_LENGTH	(sizeof (rest_extension) - 1)
 
+/*@-readonlytrans@*/
+static char rest_name[] = "__VA_ARGS__";
+/*:=readonlytrans@*/
+
+/*@notfunction@*/
+#define REST_NAME_LENGTH	(sizeof (rest_name) - 1)
+
 /* Create a DEFINITION node from a #define directive.  Arguments are
    as for do_define.  */
 
@@ -2253,6 +2260,17 @@
 				  cstring_fromChars (rest_extension)));
 	  }
 
+	if (limit - bp > size_toInt (REST_EXTENSION_LENGTH)
+	    && strncmp (rest_extension, bp, REST_EXTENSION_LENGTH) == 0)
+	  {
+	    rest_args = 1;
+	    temp->rest_args = 1;
+	    temp->name = rest_name;
+	    temp->length = REST_NAME_LENGTH;
+	  }
+	else
+	  {
+
 	if (!is_idstart[(int) *bp])
 	  {
 	    cppReader_pedwarnLit (pfile,
@@ -2275,6 +2293,8 @@
 
 	temp->length = size_fromInt (bp - temp->name);
 
+	  }
+
 	if (rest_args != 0)
 	  {
 	    bp += REST_EXTENSION_LENGTH;
