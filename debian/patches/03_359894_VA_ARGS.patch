From: Y Giridhar Appaji Nag <giridhar@appaji.net>
Date: Tue, 15 Jan 2008 13:01:49 +0530
Subject: Support for variadic macros __VA_ARGS__

Description: Support for variadic macros __VA_ARGS__,
 based on a patch from "Bernhard R. Link" <brlink@debian.org> for #359894
 .
 Updated to the patch applied upstream which also adds a check for
 +gnuextensions.
Author: Y Giridhar Appaji Nag <giridhar@appaji.net>
Applied-Upstream: https://github.com/ravenexp/splint/commit/939eb2dd36aa2cdd9611704c5ec20b12d9399d2e
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
---
 src/cpplib.c | 32 +++++++++++++++++++++++++++++++-
 1 file changed, 31 insertions(+), 1 deletion(-)

diff --git a/src/cpplib.c b/src/cpplib.c
index b054f61..682d7d4 100644
--- a/src/cpplib.c
+++ b/src/cpplib.c
@@ -2202,6 +2202,13 @@ static char rest_extension[] = "...";
 /*@notfunction@*/
 #define REST_EXTENSION_LENGTH	(sizeof (rest_extension) - 1)
 
+/*@-readonlytrans@*/
+static char rest_name[] = "__VA_ARGS__";
+/*:=readonlytrans@*/
+
+/*@notfunction@*/
+#define REST_NAME_LENGTH	(sizeof (rest_name) - 1)
+
 /* Create a DEFINITION node from a #define directive.  Arguments are
    as for do_define.  */
 
@@ -2272,6 +2279,28 @@ create_definition (/*@exposed@*/ char *buf, char *limit,
 				  cstring_fromChars (rest_extension)));
 	  }
 
+	if (limit - bp > size_toInt (REST_EXTENSION_LENGTH)
+	    && strncmp (rest_extension, bp, REST_EXTENSION_LENGTH) == 0)
+          {
+              fileloc loc = cppReader_getLoc(pfile);
+              if (!context_flagOn (FLG_GNUEXTENSIONS, loc))
+                {
+                    (void) llgenhinterror 
+                        (FLG_SYNTAX,
+                         message ("VAR_ARG macros are not supported by ISO C99"),
+                         message ("Use +gnuextensions to allow VAR_ARG macros "
+                                  "(and other GNU language extensions) "
+                                  "without this warning"),
+                         loc);
+                }
+              rest_args = 1;
+              temp->rest_args = 1;
+              temp->name = rest_name;
+              temp->length = REST_NAME_LENGTH;
+          }
+	else
+	  {
+
 	if (!is_idstart[(int) *bp])
 	  {
 	    cppReader_pedwarnLit (pfile,
@@ -2293,7 +2322,8 @@ create_definition (/*@exposed@*/ char *buf, char *limit,
 	  }
 
 	temp->length = size_fromInt (bp - temp->name);
-
+          }
+    
 	if (rest_args != 0)
 	  {
 	    bp += REST_EXTENSION_LENGTH;
